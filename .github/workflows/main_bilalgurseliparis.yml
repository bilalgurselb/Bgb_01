name: Build & Deploy SiparisApi to Azure App Service

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

env:
  DOTNET_VERSION: "9.0.x"
  PROJECT_PATH: "SiparisApi/SiparisApi.csproj"
  SOLUTION_PATH: "SiparisApi.sln"
  PUBLISH_DIR: "publish"

jobs:
  build-and-deploy:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore NuGet packages
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Build in Release mode
        run: dotnet build ${{ env.SOLUTION_PATH }} --configuration Release --no-restore

      # ⚙️ Temiz ve sabit publish: wwwroot klasörü iç içe kopyalanmaz
      - name: Publish Web API
        run: >
          dotnet publish ${{ env.PROJECT_PATH }}
          --configuration Release
          --no-build
          --self-contained false
          --output "${{ github.workspace }}\\${{ env.PUBLISH_DIR }}"

      # 🧹 Eski publish klasörlerini sil (önceki wwwroot/wwwroot kalıntısı)
      - name: Remove nested wwwroot if exists
        shell: pwsh
        run: |
          $nested = Join-Path "${{ github.workspace }}" "${{ env.PUBLISH_DIR }}\\wwwroot\\wwwroot"
          if (Test-Path $nested) {
              Write-Host "Removing nested wwwroot..."
              Remove-Item -Recurse -Force $nested
          }

      # 🚀 Azure Deploy (ZIP Deploy)
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: "bilalgurseliparis"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
          package: "${{ github.workspace }}\\${{ env.PUBLISH_DIR }}"

      # 🔄 Site warm-up (ilk isteği gönder)
      - name: Warm-up Azure Web App
        shell: pwsh
        run: |
          try {
            $response = Invoke-WebRequest -Uri "https://bilalgurseliparis.azurewebsites.net/" -UseBasicParsing -TimeoutSec 10
            Write-Host "Warm-up completed with status code $($response.StatusCode)"
          } catch {
            Write-Host "Warm-up skipped or failed."
          }
